{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dana Campan\\\\Desktop\\\\Pet-Adopt\\\\frontend\\\\pet_adopt\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    type: 'incoming',\n    text: 'Hi there ðŸ‘‹\\nHow can I help you today?'\n  }]);\n  const [newMessage, setNewMessage] = useState('');\n  const [questionId, setQuestionId] = useState('');\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSendMessage = async () => {\n    try {\n      const response = await axios.post('/api/chatbot/questions', {\n        text: newMessage,\n        category: 'default'\n      });\n      const {\n        _id\n      } = response.data;\n      setQuestionId(_id);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setNewMessage('');\n  };\n  useEffect(() => {\n    if (questionId) {\n      const getAnswers = async () => {\n        try {\n          const response = await axios.get(`/api/chatbot/questions/${questionId}/answers`);\n          const answers = response.data;\n          setMessages([...messages, ...answers.map(answer => ({\n            type: 'incoming',\n            text: answer.text\n          }))]);\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      };\n      getAnswers();\n    }\n  }, [questionId, messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler\",\n      onClick: handleToggle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material-symbols-rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-btn material-symbols-outlined\",\n          onClick: handleToggle,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${message.type}`,\n          children: [message.type === 'incoming' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            children: \"smart_toy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter a question...\",\n          spellCheck: \"false\",\n          required: true,\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"send-btn\",\n          className: \"material-symbols-rounded\",\n          onClick: handleSendMessage,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Chatbot, \"OCpa5Z6IPIo74LDctf4rUzQdQ6Q=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","type","text","newMessage","setNewMessage","questionId","setQuestionId","handleToggle","handleSendMessage","response","post","category","_id","data","error","console","getAnswers","get","answers","map","answer","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","message","index","placeholder","spellCheck","required","value","onChange","e","target","id","_c","$RefreshReg$"],"sources":["C:/Users/Dana Campan/Desktop/Pet-Adopt/frontend/pet_adopt/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Chatbot = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { type: 'incoming', text: 'Hi there ðŸ‘‹\\nHow can I help you today?' },\r\n  ]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [questionId, setQuestionId] = useState('');\r\n\r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      const response = await axios.post('/api/chatbot/questions', {\r\n        text: newMessage,\r\n        category: 'default',\r\n      });\r\n      const { _id } = response.data;\r\n      setQuestionId(_id);\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n    setNewMessage('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (questionId) {\r\n      const getAnswers = async () => {\r\n        try {\r\n          const response = await axios.get(\r\n            `/api/chatbot/questions/${questionId}/answers`\r\n          );\r\n          const answers = response.data;\r\n          setMessages([\r\n            ...messages,\r\n            ...answers.map((answer) => ({\r\n              type: 'incoming',\r\n              text: answer.text,\r\n            })),\r\n          ]);\r\n        } catch (error) {\r\n          console.error('Error:', error);\r\n        }\r\n      };\r\n      getAnswers();\r\n    }\r\n  }, [questionId, messages]);\r\n\r\n  return (\r\n    <>\r\n      <button className=\"chatbot-toggler\" onClick={handleToggle}>\r\n        <div className=\"material-symbols-rounded\">\r\n          <i className=\"fas fa-comment\"></i>\r\n        </div>\r\n        <span className=\"material-symbols-outlined\">close</span>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"chatbot\">\r\n          <header>\r\n            <h2>Chatbot</h2>\r\n            <span\r\n              className=\"close-btn material-symbols-outlined\"\r\n              onClick={handleToggle}\r\n            >\r\n              close\r\n            </span>\r\n          </header>\r\n          <ul className=\"chatbox\">\r\n            {messages.map((message, index) => (\r\n              <li key={index} className={`chat ${message.type}`}>\r\n                {message.type === 'incoming' && (\r\n                  <span className=\"material-symbols-outlined\">smart_toy</span>\r\n                )}\r\n                <p>{message.text}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"chat-input\">\r\n            <textarea\r\n              placeholder=\"Enter a question...\"\r\n              spellCheck=\"false\"\r\n              required\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n            />\r\n            <span\r\n              id=\"send-btn\"\r\n              className=\"material-symbols-rounded\"\r\n              onClick={handleSendMessage}\r\n            >\r\n              send\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,CACvC;IAAEa,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAyC,CAAC,CACrE,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMmB,YAAY,GAAGA,CAAA,KAAM;IACzBT,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,wBAAwB,EAAE;QAC1DR,IAAI,EAAEC,UAAU;QAChBQ,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF,MAAM;QAAEC;MAAI,CAAC,GAAGH,QAAQ,CAACI,IAAI;MAC7BP,aAAa,CAACM,GAAG,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;IACAV,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,IAAIgB,UAAU,EAAE;MACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;QAC7B,IAAI;UACF,MAAMP,QAAQ,GAAG,MAAMnB,KAAK,CAAC2B,GAAG,CAC7B,0BAAyBZ,UAAW,UACvC,CAAC;UACD,MAAMa,OAAO,GAAGT,QAAQ,CAACI,IAAI;UAC7Bb,WAAW,CAAC,CACV,GAAGD,QAAQ,EACX,GAAGmB,OAAO,CAACC,GAAG,CAAEC,MAAM,KAAM;YAC1BnB,IAAI,EAAE,UAAU;YAChBC,IAAI,EAAEkB,MAAM,CAAClB;UACf,CAAC,CAAC,CAAC,CACJ,CAAC;QACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAChC;MACF,CAAC;MACDE,UAAU,CAAC,CAAC;IACd;EACF,CAAC,EAAE,CAACX,UAAU,EAAEN,QAAQ,CAAC,CAAC;EAE1B,oBACEP,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACE7B,OAAA;MAAQ8B,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAEhB,YAAa;MAAAc,QAAA,gBACxD7B,OAAA;QAAK8B,SAAS,EAAC,0BAA0B;QAAAD,QAAA,eACvC7B,OAAA;UAAG8B,SAAS,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACNnC,OAAA;QAAM8B,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,EACR9B,MAAM,iBACLL,OAAA;MAAK8B,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACtB7B,OAAA;QAAA6B,QAAA,gBACE7B,OAAA;UAAA6B,QAAA,EAAI;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBnC,OAAA;UACE8B,SAAS,EAAC,qCAAqC;UAC/CC,OAAO,EAAEhB,YAAa;UAAAc,QAAA,EACvB;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACTnC,OAAA;QAAI8B,SAAS,EAAC,SAAS;QAAAD,QAAA,EACpBtB,QAAQ,CAACoB,GAAG,CAAC,CAACS,OAAO,EAAEC,KAAK,kBAC3BrC,OAAA;UAAgB8B,SAAS,EAAG,QAAOM,OAAO,CAAC3B,IAAK,EAAE;UAAAoB,QAAA,GAC/CO,OAAO,CAAC3B,IAAI,KAAK,UAAU,iBAC1BT,OAAA;YAAM8B,SAAS,EAAC,2BAA2B;YAAAD,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAC5D,eACDnC,OAAA;YAAA6B,QAAA,EAAIO,OAAO,CAAC1B;UAAI;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAJdE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLnC,OAAA;QAAK8B,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzB7B,OAAA;UACEsC,WAAW,EAAC,qBAAqB;UACjCC,UAAU,EAAC,OAAO;UAClBC,QAAQ;UACRC,KAAK,EAAE9B,UAAW;UAClB+B,QAAQ,EAAGC,CAAC,IAAK/B,aAAa,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFnC,OAAA;UACE6C,EAAE,EAAC,UAAU;UACbf,SAAS,EAAC,0BAA0B;UACpCC,OAAO,EAAEf,iBAAkB;UAAAa,QAAA,EAC5B;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAAC/B,EAAA,CAlGID,OAAO;AAAA2C,EAAA,GAAP3C,OAAO;AAoGb,eAAeA,OAAO;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}