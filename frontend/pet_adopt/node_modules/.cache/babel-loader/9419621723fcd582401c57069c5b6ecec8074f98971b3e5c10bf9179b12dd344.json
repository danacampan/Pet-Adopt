{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dana Campan\\\\Desktop\\\\Pet-Adopt\\\\frontend\\\\pet_adopt\\\\src\\\\screens\\\\MapScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, Marker, InfoWindow, useJsApiLoader } from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  display: 'flex',\n  width: '600px',\n  height: '500px'\n};\nconst center = {\n  lat: 45.66667,\n  lng: 21.5\n};\nconst addresses = [{\n  address: 'Comuna Şag, DN 59, Km 12+200',\n  info: 'Adăpost animale 1'\n}, {\n  address: 'Comuna Sacoşu Turcesc, sat Otveşti, strada Principală nr. 217',\n  info: 'Adăpost animale 2'\n}, {\n  address: 'Sat Tapia, nr. 10',\n  info: 'Adăpost animale 3'\n}];\nfunction MyComponent() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyBqSxES0gUd7JoNggJUjnRh5bDS2JXjUZ4'\n  });\n  const navigate = useNavigate();\n  const [map, setMap] = useState(null);\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [shelters, setShelters] = useState([]);\n  useEffect(() => {\n    const fetchShelters = async () => {\n      try {\n        const response = await axios.get('/api/shelters');\n        setShelters(response.data);\n      } catch (error) {\n        console.error('Error fetching shelters:', error);\n      }\n    };\n    fetchShelters();\n  }, []);\n  useEffect(() => {\n    if (isLoaded) {\n      const geocoder = new window.google.maps.Geocoder();\n      const newMarkers = [];\n      addresses.forEach((place, index) => {\n        geocoder.geocode({\n          address: place.address\n        }, (results, status) => {\n          if (status === 'OK') {\n            const location = results[0].geometry.location;\n            newMarkers.push({\n              position: {\n                lat: location.lat(),\n                lng: location.lng()\n              },\n              title: place.info,\n              id: index\n            });\n            setMarkers([...newMarkers]);\n          } else {\n            console.error(`Geocode was not successful for the following reason: ${status}`);\n          }\n        });\n      });\n    }\n  }, [isLoaded]);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  const handleMarkerClick = marker => {\n    setSelectedMarker(marker);\n    navigate(`/shelter/${encodeURIComponent(shelterName)}`);\n  };\n  const handleInfoWindowClose = () => {\n    setSelectedMarker(null);\n  };\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: [markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n      position: marker.position,\n      title: marker.title,\n      onClick: () => handleMarkerClick(marker)\n    }, marker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: selectedMarker.position,\n      onCloseClick: handleInfoWindowClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedMarker.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Additional information can be added here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MyComponent, \"SC13Y+s/42hpDDvk5rZPePPZdoM=\", false, function () {\n  return [useJsApiLoader, useNavigate];\n});\n_c = MyComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MyComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MyComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","Marker","InfoWindow","useJsApiLoader","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","display","width","height","center","lat","lng","addresses","address","info","MyComponent","_s","isLoaded","id","googleMapsApiKey","navigate","map","setMap","markers","setMarkers","selectedMarker","setSelectedMarker","shelters","setShelters","fetchShelters","response","axios","get","data","error","console","geocoder","window","google","maps","Geocoder","newMarkers","forEach","place","index","geocode","results","status","location","geometry","push","position","title","onLoad","useCallback","callback","bounds","LatLngBounds","fitBounds","onUnmount","handleMarkerClick","marker","encodeURIComponent","shelterName","handleInfoWindowClose","mapContainerStyle","zoom","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","_c","_c2","memo","$RefreshReg$"],"sources":["C:/Users/Dana Campan/Desktop/Pet-Adopt/frontend/pet_adopt/src/screens/MapScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n  useJsApiLoader,\r\n} from '@react-google-maps/api';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst containerStyle = {\r\n  display: 'flex',\r\n  width: '600px',\r\n  height: '500px',\r\n};\r\n\r\nconst center = {\r\n  lat: 45.66667,\r\n  lng: 21.5,\r\n};\r\n\r\nconst addresses = [\r\n  { address: 'Comuna Şag, DN 59, Km 12+200', info: 'Adăpost animale 1' },\r\n  {\r\n    address: 'Comuna Sacoşu Turcesc, sat Otveşti, strada Principală nr. 217',\r\n    info: 'Adăpost animale 2',\r\n  },\r\n  { address: 'Sat Tapia, nr. 10', info: 'Adăpost animale 3' },\r\n];\r\n\r\nfunction MyComponent() {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey: 'AIzaSyBqSxES0gUd7JoNggJUjnRh5bDS2JXjUZ4',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const [map, setMap] = useState(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selectedMarker, setSelectedMarker] = useState(null);\r\n\r\n  const [shelters, setShelters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchShelters = async () => {\r\n      try {\r\n        const response = await axios.get('/api/shelters');\r\n        setShelters(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching shelters:', error);\r\n      }\r\n    };\r\n\r\n    fetchShelters();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      const geocoder = new window.google.maps.Geocoder();\r\n      const newMarkers = [];\r\n\r\n      addresses.forEach((place, index) => {\r\n        geocoder.geocode({ address: place.address }, (results, status) => {\r\n          if (status === 'OK') {\r\n            const location = results[0].geometry.location;\r\n            newMarkers.push({\r\n              position: { lat: location.lat(), lng: location.lng() },\r\n              title: place.info,\r\n              id: index,\r\n            });\r\n            setMarkers([...newMarkers]);\r\n          } else {\r\n            console.error(\r\n              `Geocode was not successful for the following reason: ${status}`\r\n            );\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }, [isLoaded]);\r\n\r\n  const onLoad = React.useCallback(function callback(map) {\r\n    const bounds = new window.google.maps.LatLngBounds(center);\r\n    map.fitBounds(bounds);\r\n\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = React.useCallback(function callback(map) {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleMarkerClick = (marker) => {\r\n    setSelectedMarker(marker);\r\n    navigate(`/shelter/${encodeURIComponent(shelterName)}`);\r\n  };\r\n\r\n  const handleInfoWindowClose = () => {\r\n    setSelectedMarker(null);\r\n  };\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={10}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n    >\r\n      {markers.map((marker) => (\r\n        <Marker\r\n          key={marker.id}\r\n          position={marker.position}\r\n          title={marker.title}\r\n          onClick={() => handleMarkerClick(marker)}\r\n        />\r\n      ))}\r\n      {selectedMarker && (\r\n        <InfoWindow\r\n          position={selectedMarker.position}\r\n          onCloseClick={handleInfoWindowClose}\r\n        >\r\n          <div>\r\n            <h3>{selectedMarker.title}</h3>\r\n            <p>Additional information can be added here.</p>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(MyComponent);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}