{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dana Campan\\\\Desktop\\\\Pet-Adopt\\\\frontend\\\\pet_adopt\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([{\n    type: 'incoming',\n    text: 'Hi there ðŸ‘‹\\nHow can I help you today?'\n  }]);\n  const [newMessage, setNewMessage] = useState('');\n  const API_KEY = 'sk-proj-52u1RgKbVsWfl6L5hDReT3BlbkFJa85rwgVfxghHLIm6CuJz';\n  const handleToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      setMessages([...messages, {\n        type: 'outgoing',\n        text: newMessage\n      }]);\n      generateResponse(newMessage);\n      setNewMessage('');\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const generateResponse = async userMessage => {\n    const API_URL = 'https://api.openai.com/v1/chat/completions';\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${API_KEY}`\n      },\n      body: JSON.stringify({\n        model: 'gpt-3.5-turbo',\n        messages: [{\n          role: 'user',\n          content: userMessage\n        }]\n      })\n    };\n    setMessages(prevMessages => [...prevMessages, {\n      type: 'incoming',\n      text: 'Thinking...'\n    }]);\n    try {\n      const response = await fetch(API_URL, requestOptions);\n      const data = await response.json();\n      if (data.choices && data.choices.length > 0 && data.choices[0].message) {\n        setMessages(prevMessages => prevMessages.slice(0, -1).concat({\n          type: 'incoming',\n          text: data.choices[0].message.content.trim()\n        }));\n      } else {\n        throw new Error('Invalid response structure');\n      }\n    } catch (error) {\n      setMessages(prevMessages => prevMessages.slice(0, -1).concat({\n        type: 'incoming',\n        text: 'Oops! Something went wrong. Please try again.',\n        error: true\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggler\",\n      onClick: handleToggle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material-symbols-rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-btn material-symbols-outlined\",\n          onClick: handleToggle,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chatbox\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `chat ${message.type}`,\n          children: [message.type === 'incoming' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"material-symbols-outlined\",\n            children: \"smart_toy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter a message...\",\n          spellCheck: \"false\",\n          required: true,\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyDown: handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"send-btn\",\n          className: \"material-symbols-rounded\",\n          onClick: handleSendMessage,\n          children: \"send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Chatbot, \"eRa92CIAtIHFag+FqFHWOQd44js=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","type","text","newMessage","setNewMessage","API_KEY","handleToggle","handleSendMessage","trim","generateResponse","handleKeyDown","e","key","shiftKey","preventDefault","userMessage","API_URL","requestOptions","method","headers","Authorization","body","JSON","stringify","model","role","content","prevMessages","response","fetch","data","json","choices","length","message","slice","concat","Error","error","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","placeholder","spellCheck","required","value","onChange","target","onKeyDown","id","_c","$RefreshReg$"],"sources":["C:/Users/Dana Campan/Desktop/Pet-Adopt/frontend/pet_adopt/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([\r\n    { type: 'incoming', text: 'Hi there ðŸ‘‹\\nHow can I help you today?' },\r\n  ]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const API_KEY = 'sk-proj-52u1RgKbVsWfl6L5hDReT3BlbkFJa85rwgVfxghHLIm6CuJz';\r\n\r\n  const handleToggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      setMessages([...messages, { type: 'outgoing', text: newMessage }]);\r\n      generateResponse(newMessage);\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const generateResponse = async (userMessage) => {\r\n    const API_URL = 'https://api.openai.com/v1/chat/completions';\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${API_KEY}`,\r\n      },\r\n      body: JSON.stringify({\r\n        model: 'gpt-3.5-turbo',\r\n        messages: [{ role: 'user', content: userMessage }],\r\n      }),\r\n    };\r\n\r\n    setMessages((prevMessages) => [\r\n      ...prevMessages,\r\n      { type: 'incoming', text: 'Thinking...' },\r\n    ]);\r\n\r\n    try {\r\n      const response = await fetch(API_URL, requestOptions);\r\n      const data = await response.json();\r\n\r\n      if (data.choices && data.choices.length > 0 && data.choices[0].message) {\r\n        setMessages((prevMessages) =>\r\n          prevMessages.slice(0, -1).concat({\r\n            type: 'incoming',\r\n            text: data.choices[0].message.content.trim(),\r\n          })\r\n        );\r\n      } else {\r\n        throw new Error('Invalid response structure');\r\n      }\r\n    } catch (error) {\r\n      setMessages((prevMessages) =>\r\n        prevMessages.slice(0, -1).concat({\r\n          type: 'incoming',\r\n          text: 'Oops! Something went wrong. Please try again.',\r\n          error: true,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"chatbot-toggler\" onClick={handleToggle}>\r\n        <div className=\"material-symbols-rounded\">\r\n          <i className=\"fas fa-comment\"></i>\r\n        </div>\r\n        <span className=\"material-symbols-outlined\">close</span>\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"chatbot\">\r\n          <header>\r\n            <h2>Chatbot</h2>\r\n            <span\r\n              className=\"close-btn material-symbols-outlined\"\r\n              onClick={handleToggle}\r\n            >\r\n              close\r\n            </span>\r\n          </header>\r\n          <ul className=\"chatbox\">\r\n            {messages.map((message, index) => (\r\n              <li key={index} className={`chat ${message.type}`}>\r\n                {message.type === 'incoming' && (\r\n                  <span className=\"material-symbols-outlined\">smart_toy</span>\r\n                )}\r\n                <p>{message.text}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"chat-input\">\r\n            <textarea\r\n              placeholder=\"Enter a message...\"\r\n              spellCheck=\"false\"\r\n              required\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n            <span\r\n              id=\"send-btn\"\r\n              className=\"material-symbols-rounded\"\r\n              onClick={handleSendMessage}\r\n            >\r\n              send\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}