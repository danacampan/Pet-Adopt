{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dana Campan\\\\Desktop\\\\Pet-Adopt\\\\frontend\\\\pet_adopt\\\\src\\\\screens\\\\UserPostsScreen.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useReducer } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Pet from '../components/Pet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        pets: action.payload,\n        loading: false\n      };\n    case 'FETCH_FAIL':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nfunction UserPostsScreen() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [{\n    pets,\n    loading,\n    error\n  }, dispatch] = useReducer(reducer, {\n    pets: [],\n    loading: false,\n    error: ''\n  });\n  useEffect(() => {\n    console.log('User ID:', {\n      userId\n    });\n    const fetchData = async () => {\n      dispatch({\n        type: 'FETCH_REQUEST'\n      });\n      try {\n        const result = await axios.get(`/api/pets/user/${userId}`);\n        dispatch({\n          type: 'FETCH_SUCCESS',\n          payload: result.data\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: err.message\n        });\n      }\n    };\n    if ({\n      userId\n    }) {\n      fetchData();\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: pets.map(pet => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        md: 6,\n        lg: 3,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Pet, {\n          pet: pet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, pet.slug, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPostsScreen, \"MKXDvyrHd4WyNjgydQy7Idom+lk=\", false, function () {\n  return [useParams];\n});\n_c = UserPostsScreen;\nexport default UserPostsScreen;\nvar _c;\n$RefreshReg$(_c, \"UserPostsScreen\");","map":{"version":3,"names":["axios","useEffect","useReducer","useParams","Row","Col","Pet","jsxDEV","_jsxDEV","reducer","state","action","type","loading","pets","payload","error","UserPostsScreen","_s","userId","dispatch","console","log","fetchData","result","get","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pet","sm","md","lg","className","slug","_c","$RefreshReg$"],"sources":["C:/Users/Dana Campan/Desktop/Pet-Adopt/frontend/pet_adopt/src/screens/UserPostsScreen.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useReducer } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Pet from '../components/Pet';\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return { ...state, pets: action.payload, loading: false };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction UserPostsScreen() {\r\n  const { userId } = useParams();\r\n  const [{ pets, loading, error }, dispatch] = useReducer(reducer, {\r\n    pets: [],\r\n    loading: false,\r\n    error: '',\r\n  });\r\n  useEffect(() => {\r\n    console.log('User ID:', { userId });\r\n    const fetchData = async () => {\r\n      dispatch({ type: 'FETCH_REQUEST' });\r\n      try {\r\n        const result = await axios.get(`/api/pets/user/${userId}`);\r\n        dispatch({ type: 'FETCH_SUCCESS', payload: result.data });\r\n      } catch (err) {\r\n        dispatch({ type: 'FETCH_FAIL', payload: err.message });\r\n      }\r\n    };\r\n    if ({ userId }) {\r\n      fetchData();\r\n    }\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : error ? (\r\n        <div>{error}</div>\r\n      ) : (\r\n        <Row>\r\n          {pets.map((pet) => (\r\n            <Col key={pet.slug} sm={6} md={6} lg={3} className=\"mb-3\">\r\n              <Pet pet={pet}></Pet>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserPostsScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}